---
env:
  browser: true
  es2021: true
  node: true
  jest: true
extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:react/recommended
  - plugin:jest/recommended
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:prettier/recommended
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaVersion: latest
  sourceType: module
plugins:
  - '@typescript-eslint'
  - react
  - jest
  - import
  - react-hooks 
rules:
  prettier/prettier: error
  eqeqeq:
    - error
    - always
  curly:
    - error
    - all
  no-unused-vars: warn
  no-redeclare: error
  no-shadow: error
  prefer-const: error
  no-var: error
  global-require: warn
  handle-callback-err: warn
  no-buffer-constructor: warn
  no-new-require: warn
  no-path-concat: warn
  '@typescript-eslint/no-explicit-any': 'warn'
  'import/order':  # Ensures a consistent order of module imports
    - 'error'
    - groups: ['builtin', 'external', 'internal', 'parent', 'sibling', 'index']
      pathGroups:
        - pattern: 'react'
          group: 'external'
          position: 'before'
      pathGroupsExcludedImportTypes: ['react']
      newlines-between: 'always'
      alphabetize:
        order: 'asc'
        caseInsensitive: true
  'consistent-return': 'error'  # Enforces consistent return in functions
  'react-hooks/rules-of-hooks': 'error'  # Enforces the rules of Hooks
  'react-hooks/exhaustive-deps': 'warn'  # Checks effect dependencies
  'react/jsx-filename-extension': ['warn', { 'extensions': ['.jsx', '.tsx'] }]  # Enforce jsx and tsx file extensions for JSX files
  'no-unused-expressions': 'warn'  # Avoid code that has no effect

settings:
  react:
    version: detect

overrides:
  - files:
      - '*.d.ts'
    rules:
      'no-unused-vars': 'off'
      'prettier/prettier': 'off'
